#version 450

struct Particle {
  vec2 position;
  vec2 velocity;
  vec4 colour;
};

layout(push_constant) uniform constants {
  float delta;
} time;

layout(std140, binding = 0) readonly buffer ParticleSSBOIn {
   Particle particlesIn[ ];
};

layout(std140, binding = 1) writeonly restrict buffer ParticleSSBOOut {
   Particle particlesOut[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {
  uint i = gl_GlobalInvocationID.x;
  Particle p = particlesIn[i];

  particlesOut[i].position = p.position + p.velocity.xy * time.delta;
  particlesOut[i].velocity = p.velocity;
  particlesOut[i].colour = p.colour;
}
